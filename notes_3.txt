Inheritance
Polymorphism
- one thing having several forms
- Creating function with same name but each function performs different task
- Overriding is the example of polymorphism
- But overriding is only possible when there is inheritance


Overriding and Overloading
- Overloading is performed when we pass arguments
- Overriding means to update parent's method

- Overloading will have different arguments in parent and child function
- Overriding means to change logic, so it always done to show updated features

Final Keyword
- The value which is freezed
- Used in 3 places 
  - class, method and variable

Super
Super vs this

   scope - private, default, protected, public    
   private < default < protected < public

   Packages - Collection of similar classes
   Modularity
   com - commercial
   org - organization
   com.org.ProjectName.Module.SubModule

Overriding rules
- there are 3 rules, but right now we will understand only these 2...

1. Weaker Access Rule
   - we can't make override method to lower scope, means weaker access
   - If parent's method is default than we can't make child class method weaker (it means private)
   - If parent's method is weaker than we can make it strong by making it public


2. Covariant Return Type
 - If your parent class function return something and child class function also return same thing there is no benefit of overriding
 - We can change return type while doing overriding
 - When we need multiple values to return than we should return an object
 

Overloading
- Functions with name but :
  - Number of arguments can be different
  - Types of arguments can also be different
  - Order of arguments can also be different

In overloading :
 - there is no IS-A relation
 - arguments could be different and it does not depend on return type
 - no weaker access concept
 - method call is decide on basis arguments
 - logic is same but different arguments

Type Promotion
- JRE will give first chance to int
  - if int is not available then it will search for bigger type or closer to it
  - long is closer to int, so next chance is given to long
- if long is not available then it search float, if float is also not available then search for double
- if double is not available than it will go for Integer class












